/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Corporation. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#import "MSGraphServiceModels.h"
#import "core/MSOrcObjectizer.h"


/** Implementation for MSGraphServicePermission
 *
 */
@implementation MSGraphServicePermission


@synthesize odataType = _odataType;


+ (NSDictionary *) $$$_$$$propertiesNamesMappings
{
    static NSDictionary *_$$$_$$$propertiesNamesMappings=nil; 
    
        if(_$$$_$$$propertiesNamesMappings==nil) {
    
        _$$$_$$$propertiesNamesMappings=[[NSDictionary alloc] initWithObjectsAndKeys:  @"grantedTo", @"grantedTo", @"invitation", @"invitation", @"inheritedFrom", @"inheritedFrom", @"link", @"link", @"roles", @"roles", @"shareId", @"shareId", @"id", @"_id", nil];
        
    }
    
    return _$$$_$$$propertiesNamesMappings;
}

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#microsoft.graph.permission";
        
    }

	return self;
}



- (instancetype) initWithDictionary: (NSDictionary *) dic {
    if((self = [self init])) {
        if(dic!=nil) {
		_grantedTo = (![dic objectForKey: @"grantedTo"] || [ [dic objectForKey: @"grantedTo"] isKindOfClass:[NSNull class]] )?_grantedTo:[[MSGraphServiceIdentitySet alloc] initWithDictionary: [dic objectForKey: @"grantedTo"]];
		_invitation = (![dic objectForKey: @"invitation"] || [ [dic objectForKey: @"invitation"] isKindOfClass:[NSNull class]] )?_invitation:[[MSGraphServiceSharingInvitation alloc] initWithDictionary: [dic objectForKey: @"invitation"]];
		_inheritedFrom = (![dic objectForKey: @"inheritedFrom"] || [ [dic objectForKey: @"inheritedFrom"] isKindOfClass:[NSNull class]] )?_inheritedFrom:[[MSGraphServiceItemReference alloc] initWithDictionary: [dic objectForKey: @"inheritedFrom"]];
		_link = (![dic objectForKey: @"link"] || [ [dic objectForKey: @"link"] isKindOfClass:[NSNull class]] )?_link:[[MSGraphServiceSharingLink alloc] initWithDictionary: [dic objectForKey: @"link"]];

        if([dic objectForKey: @"roles"] != [NSNull null]){
            _roles = [[MSOrcChangesTrackingArray alloc] init];
            
            for (id object in [dic objectForKey: @"roles"]) {
                [_roles addObject:[object copy]];
            }
            
            [(MSOrcChangesTrackingArray *)_roles resetChangedFlag];
        }
        
		_shareId = (![dic objectForKey: @"shareId"] || [ [dic objectForKey: @"shareId"] isKindOfClass:[NSNull class]] )?_shareId:[[dic objectForKey: @"shareId"] copy];
		self._id = (![dic objectForKey: @"id"] || [ [dic objectForKey: @"id"] isKindOfClass:[NSNull class]] )?self._id:[[dic objectForKey: @"id"] copy];
    }
    [self.updatedValues removeAllObjects];
    }
    
    return self;
}

- (NSDictionary *) toDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = [self.grantedTo toDictionary];if (curVal!=nil) [dic setValue: curVal forKey: @"grantedTo"];}
	{id curVal = [self.invitation toDictionary];if (curVal!=nil) [dic setValue: curVal forKey: @"invitation"];}
	{id curVal = [self.inheritedFrom toDictionary];if (curVal!=nil) [dic setValue: curVal forKey: @"inheritedFrom"];}
	{id curVal = [self.link toDictionary];if (curVal!=nil) [dic setValue: curVal forKey: @"link"];}
	{    NSMutableArray *curVal = [[NSMutableArray alloc] init];
    
    for(id obj in self.roles) {
       [curVal addObject:[obj copy]];
    }
    
    if([curVal count]==0) curVal=nil;
if (curVal!=nil) [dic setValue: curVal forKey: @"roles"];}
	{id curVal = [self.shareId copy];if (curVal!=nil) [dic setValue: curVal forKey: @"shareId"];}
	{id curVal = [self._id copy];if (curVal!=nil) [dic setValue: curVal forKey: @"id"];}
    [dic setValue: @"#microsoft.graph.permission" forKey: @"@odata.type"];

    return dic;
}

- (NSDictionary *) toUpdatedValuesDictionary {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];

	{id curVal = self.grantedTo;
    if([self.updatedValues containsObject:@"grantedTo"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"grantedTo"];
            }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"grantedTo"];
            }
        
            }}
	{id curVal = self.invitation;
    if([self.updatedValues containsObject:@"invitation"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"invitation"];
            }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"invitation"];
            }
        
            }}
	{id curVal = self.inheritedFrom;
    if([self.updatedValues containsObject:@"inheritedFrom"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"inheritedFrom"];
            }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"inheritedFrom"];
            }
        
            }}
	{id curVal = self.link;
    if([self.updatedValues containsObject:@"link"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal toDictionary] forKey: @"link"];
            }
        else
    {
                
        NSDictionary *updatedDic=[curVal toUpdatedValuesDictionary];
        
            if(updatedDic!=nil && [updatedDic count]>0)
            {
                [dic setValue: [curVal toDictionary] forKey: @"link"];
            }
        
            }}
	{id curVal = self.roles;
    if([self.updatedValues containsObject:@"roles"])
    {
            NSMutableArray *curArray = [[NSMutableArray alloc] init];
    
    for(id obj in curVal) {
       [curArray addObject:[obj copy]];
    }
    
            [dic setValue: curArray forKey: @"roles"];
            }
        else
    {
                
        if(![curVal isKindOfClass:[MSOrcChangesTrackingArray class]] || [(MSOrcChangesTrackingArray *)curVal hasChanged])
        {
                NSMutableArray *curArray = [[NSMutableArray alloc] init];
    
    for(id obj in self.roles) {
       [curArray addObject:[obj copy]];
    }
    
                 [dic setValue: curArray forKey: @"roles"];
        }
        
            }}
	{id curVal = self.shareId;
    if([self.updatedValues containsObject:@"shareId"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"shareId"];
            }
    }
	{id curVal = self._id;
    if([self.updatedValues containsObject:@"id"])
    {
                [dic setValue: curVal==nil?[NSNull null]:[curVal copy] forKey: @"id"];
            }
    }
    return dic;
}


/** Setter implementation for property grantedTo
 *
 */
- (void) setGrantedTo: (MSGraphServiceIdentitySet *) value {
    _grantedTo = value;
    [self valueChangedFor:@"grantedTo"];
}
       
/** Setter implementation for property invitation
 *
 */
- (void) setInvitation: (MSGraphServiceSharingInvitation *) value {
    _invitation = value;
    [self valueChangedFor:@"invitation"];
}
       
/** Setter implementation for property inheritedFrom
 *
 */
- (void) setInheritedFrom: (MSGraphServiceItemReference *) value {
    _inheritedFrom = value;
    [self valueChangedFor:@"inheritedFrom"];
}
       
/** Setter implementation for property link
 *
 */
- (void) setLink: (MSGraphServiceSharingLink *) value {
    _link = value;
    [self valueChangedFor:@"link"];
}
       
/** Setter implementation for property roles
 *
 */
- (void) setRoles: (NSMutableArray *) value {
    _roles = value;
    [self valueChangedFor:@"roles"];
}
       
/** Setter implementation for property shareId
 *
 */
- (void) setShareId: (NSString *) value {
    _shareId = value;
    [self valueChangedFor:@"shareId"];
}
       

@end
